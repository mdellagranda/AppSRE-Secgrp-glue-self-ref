Resources:
  GlueSourceSGdbs:
    Type: AWS::EC2::SecurityGroup
    Properties:
#      VpcId: !Sub vpc-mygluejobs
      GroupDescription: Security Group to allow AWS services to access on-premise DBs
  GlueTargetSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      #VpcId: !Sub vpc-intranet
      GroupDescription: Self referencing security group
  OutboundRule: ''
    Type: AWS::EC2::SecurityGroupEgress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      DestinationSecurityGroupId:
        Fn::GetAtt:
          SourceSecurityGroupOwnerId: !GetAtt SGR-Intranet.SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt SGR-Intranet.SourceSecurityGroup.GroupName
      GroupId:
        Fn::GetAtt:
          SourceSecurityGroupOwnerId: !GetAtt SGR-mygluejob.SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt SGR-mygluejob.SourceSecurityGroup.GroupName
  InboundRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      IpProtocol: tcp
      FromPort: 0
      ToPort: 65535
      SourceSecurityGroupId:
        Fn::GetAtt:
          SourceSecurityGroupOwnerId: !GetAtt SGR-Intranet.SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt SGR-Intranet.SourceSecurityGroup.GroupName
      GroupId:
        Fn::GetAtt:
          SourceSecurityGroupOwnerId: !GetAtt SGR-mygluejob.SourceSecurityGroup.OwnerAlias
          SourceSecurityGroupName: !GetAtt SGR-mygluejob.SourceSecurityGroup.GroupName

#Additional security groups

#SecurityGroupIngressMYSERVICE:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#        Description: "Allow additional port(s)"
#        CidrIp: !Sub "${MyIp}"
#        IpProtocol: tcp
#        FromPort: XX
#        ToPort: XX

#SecurityGroupIngressHTTP:
#    Type: AWS::EC2::SecurityGroupIngress
#    Properties:
#        Description: "Allow HTTP inbound traffic"
#        GroupId: !Ref SecurityGroup
#        CidrIp: 0.0.0.0/0
#        IpProtocol: tcp
#        FromPort: 80
#        ToPort: 80

#SecurityGroupEgress:
#    Type: AWS::EC2::SecurityGroupEgress
#    Properties:
#        Description: "Allow all outbound traffic"
#        GroupId: !Ref SecurityGroup
#        CidrIp: 0.0.0.0/0  
#        IpProtocol: tcp
#        FromPort: 80
#        ToPort: 80